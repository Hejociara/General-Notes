Variáveis e constantes
int, double, float, char

= símbolo de atribuição

:::::::::::
public static void main (String[]args){
/* Devemos definir variáveis e constantes
// Uma variável em java é definida quando escolhemos
o tipo da variável, depois o nome da variável e 
depois o valor da variável
Ex: int(tipo da variável) raio(nome da variável) = (recebe o valor) 3;
    */
int raio = 3;
// constantes devem levar letras maiúsculas
// colocando a palavra final antes de uma variável, torna-a imutável
/*
 * Inferência(deduzir, concluir)
 */
 var a = 4.5;
 var c = "Texto";
 System.out.printlin(c);

var d = "outro texto"
System.out.printlin(d);

/*
 * 8 tipos primitivos: 
 * 6 desses tipos, são numéricos
 * Byte(1byte), short(2bytes), int(4bytes) e long(8bytes)-representam valores inteiros
 * Eles possuem valores de armazenamento mas, todos são inteiros
 * Além disso, temos os números inteiros de pontos flutuantes:
 * Float(4 bytes ou 8 bits) e double (8 bytes)
 * e os outros 2 tipos primitivos são:
 * char e boolean(false and true)
 * 
 * Conversão de tipos:
 * 
 * método: usando notação(ponto)
 */
 String s = "Hello earth world!!!"
 s = s.replace("earth", "earth")
 }

:::::::::::::::::::::::::::

String





**Console**:

System.out.print("Algo"); // Imprime na mesma linha

System.out.println("Algo"); //Imprime e dá espaçamento para uma próxima linha

System.out.printf("format, args"); // print formatado

Ex:

System.out.printf("Exemplo: %d %d %d %d, 1,2,3,4"); // print formatado 

%n, dentro do printf, pode realizar uma quebra de linha

:::::::::::

.out = envia para a tela, saída, transmitir algo(impressora, monitor)

.in = entrada(teclado,mouse, câmera)

Scanner entrada = new Scanner(System.in); // entrada do sistema, monitorar a entrada

entrada.close();  // para encerrar esse ciclo utilizar:

::::::::::::::::::::::::::::::

**nextInt()** e **nextDouble()**

Ex:

1. Scanner teclado = new Scanner(system.n);

2.  

3. System.out.println("Qual a sua idade?");

4. int idade = teclado.nextInt();

5. System.out.println("Qual o seu nome?");

6. string nome = teclado.nextLine();

7. System.out.println("Qual o seu sobrenome?");

8. string sobrenome = teclado.nextLine();

9. 

10. ```
    teclado.close();
    ```

precisamos "pegar" o "\n" que o **nextInt()** não lê. Isso pode ser feito colocando um comando **nextLine()** depois do **nextInt()**, de modo que o código abaixo vai funcionar da maneira como queríamos.

```
Scanner teclado = new Scanner(system.n); 
System.out.println("Qual a sua idade?");
int idade = teclado.nextInt();
telcado.nextLine() //lê o "\\n" que o teclado.nextInt() deixa para trás.
System.out.println("Qual o seu nome?");
string nome = teclado.nextLine();
System.out.println("Qual o seu sobrenome?");
string sobrenome = teclado.nextLine(); 
teclado.close();
```
